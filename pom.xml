<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.redhat.rcm</groupId>
    <artifactId>redhat-releng-tools</artifactId>
    <version>8</version>
  </parent>

  <groupId>com.example</groupId>
  <artifactId>cpaas</artifactId>
  <packaging>jar</packaging>
  <version>0.0.0-SNAPSHOT</version> <!-- unused -->

  <description>Testing a Pipeline Shared Library with Spock</description>

  <repositories>
    <repository>
      <id>jenkins-releases</id>
      <name>Jenkins Releases</name>
      <url>http://repo.jenkins-ci.org/releases</url>
    </repository>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <properties>
    <groovy.core.version>2.4.11</groovy.core.version>
    <groovy.spock.version>1.1-groovy-2.4</groovy.spock.version>
    <groovy.gmaven.pluginVersion>1.6.1</groovy.gmaven.pluginVersion>

    <jenkins.version>2.164</jenkins.version>
    <jenkins.servlet.version>3.1.0</jenkins.servlet.version>
    <javax.servlet-api.version>2.5</javax.servlet-api.version>
    <jenkins.symbol.version>1.10</jenkins.symbol.version>
    <jenkins.workflow.cps.version>2.36</jenkins.workflow.cps.version>
    <jenkins.workflow.step.version>2.10</jenkins.workflow.step.version>

    <jenkins-spock.version>2.1.2</jenkins-spock.version>
    <openshift.client.version>1.0.23</openshift.client.version>

    <junit.version>4.12</junit.version>

    <logback.configration>logback-test.xml</logback.configration>
    <logdir>${project.build.directory}/log</logdir>
    <test.loglevel>ERROR</test.loglevel>
    <log.logback.version>1.2.3</log.logback.version>
    <log.slf4j.version>1.7.25</log.slf4j.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>${groovy.spock.version}</version>
    </dependency>

    <dependency>
      <groupId>com.cloudbees</groupId>
      <artifactId>groovy-cps</artifactId>
      <version>1.24</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.ivy/ivy -->
    <dependency>
      <groupId>org.apache.ivy</groupId>
      <artifactId>ivy</artifactId>
      <version>2.4.0</version>
    </dependency>

    <dependency>
      <groupId>com.openshift.jenkins.plugins</groupId>
      <artifactId>openshift-client</artifactId>
      <version>${openshift.client.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>pipeline-build-step</artifactId>
      <version>2.7</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.csanchez.jenkins.plugins</groupId>
      <artifactId>kubernetes</artifactId>
      <version>1.14.3</version>
    </dependency>

    <dependency>
      <groupId>com.homeaway.devtools.jenkins</groupId>
      <artifactId>jenkins-spock</artifactId>
      <version>${jenkins-spock.version}</version>
<!--      <scope>test</scope>-->
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${log.logback.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${log.logback.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${javax.servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
<!--      <scope>test</scope>-->
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>jenkins-core</artifactId>
      <version>${jenkins.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-step-api</artifactId>
      <version>${jenkins.workflow.step.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-support</artifactId>
      <version>2.18</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-basic-steps</artifactId>
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-cps</artifactId>
      <version>${jenkins.workflow.cps.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci</groupId>
      <artifactId>symbol-annotation</artifactId>
      <version>${jenkins.symbol.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${log.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${log.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${log.slf4j.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jenkins-ci.plugins/credentials -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials</artifactId>
      <version>2.1.16</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jenkins-ci.plugins/credentials-binding -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials-binding</artifactId>
      <version>1.13</version>
    </dependency>

    <dependency>
      <groupId>org.6wind.jenkins</groupId>
      <artifactId>lockable-resources</artifactId>
      <version>2.0</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>test</testSourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <forkCount>1</forkCount>
            <includes>
              <include>**/*Spec</include>
            </includes>
            <systemPropertyVariables>
              <groovy.grape.enable>false</groovy.grape.enable>
              <root.loglevel>${test.loglevel}</root.loglevel>
              <root.appender>Stdout</root.appender>
              <test.loglevel>${test.loglevel}</test.loglevel>
              <logdir>${logdir}</logdir>
            </systemPropertyVariables>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>${groovy.gmaven.pluginVersion}</version>
          <executions>
            <execution>
              <id>groovy</id>
              <goals>
                <goal>generateStubs</goal>
                <goal>generateTestStubs</goal>
                <goal>compile</goal>
                <goal>compileTests</goal>
                <goal>removeStubs</goal>
                <goal>removeTestStubs</goal>
              </goals>
              <configuration>
                <verbose>true</verbose>
                <sources>
                  <source>
                    <directory>${project.build.sourceDirectory}</directory>
                  </source>
                </sources>
                <testSources>
                  <testSource>
                    <directory>${project.build.testSourceDirectory}</directory>
                    <includes>
                      <include>**/*.groovy</include>
                    </includes>
                  </testSource>
                </testSources>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <rules>
            <!-- Always allow the jitpack/jenkins repos -->
            <requireNoRepositories>
              <allowedRepositories>
                <allowedRepository>jenkins-releases</allowedRepository>
                <allowedRepository>jitpack.io</allowedRepository>
                <allowedRepository>rh-nexus</allowedRepository>
              </allowedRepositories>
            </requireNoRepositories>
          </rules>
        </configuration>
        <executions>
          <!-- Not a normal maven project so we don't need managed dependencies -->
          <execution>
            <id>enforce-commonjava-standards</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>

<!--    <testResources>-->
<!--      <testResource>-->
<!--        <includes>-->
<!--          <include>vars/**/*.groovy</include>-->
<!--        </includes>-->
<!--        <directory>${project.basedir}</directory>-->
<!--      </testResource>-->
<!--      <testResource>-->
<!--        <directory>test/resources</directory>-->
<!--      </testResource>-->
<!--    </testResources>-->
<!--    <resources>-->
<!--      <resource>-->
<!--        <directory>resources</directory>-->
<!--      </resource>-->
<!--    </resources>-->
  </build>
</project>
